# Code generated by github.com/hairyhenderson/gomplate DO NOT EDIT.

package sargassum.pslive.web.policies.auth

import future.keywords

import data.sargassum.godest.routing

# Policy Scope

in_scope if {
	"/csrf" == input.resource.path
}

in_scope if {
	"/login" == input.resource.path
}

in_scope if {
	"/sessions" == input.resource.path
}

# Policy Result & Error

matching_routes contains route if {
	"GET" == input.operation.method
	["csrf"] = split(trim_prefix(input.resource.path, "/"), "/")
	route := "GET /csrf"
}

allow if {
	"GET" == input.operation.method
	["csrf"] = split(trim_prefix(input.resource.path, "/"), "/")
}

matching_routes contains route if {
	"GET" == input.operation.method
	["login"] = split(trim_prefix(input.resource.path, "/"), "/")
	route := "GET /login"
}

allow if {
	"GET" == input.operation.method
	["login"] = split(trim_prefix(input.resource.path, "/"), "/")
}

matching_routes contains route if {
	"POST" == input.operation.method
	["sessions"] = split(trim_prefix(input.resource.path, "/"), "/")
	route := "POST /sessions"
}

allow if {
	"POST" == input.operation.method
	["sessions"] = split(trim_prefix(input.resource.path, "/"), "/")
}

errors contains error_matching if {
	in_scope
	error_matching := routing.error_matching_routes(matching_routes)
}
