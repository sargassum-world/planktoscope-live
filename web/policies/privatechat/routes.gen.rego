# Code generated by github.com/hairyhenderson/gomplate DO NOT EDIT.

package sargassum.pslive.web.policies.privatechat

import future.keywords

import data.sargassum.godest.routing

# Policy Scope

in_scope if {
	glob.match("/private-chats/*", [], input.resource.path)
}

# Policy Result & Error

matching_routes contains route if {
	"GET" == input.operation.method
	["private-chats", first, second, "chat", "users"] = split(trim_prefix(input.resource.path, "/"), "/")
	route := "GET /private-chats/:first/:second/chat/users"
}

allow if {
	"GET" == input.operation.method
	["private-chats", first, second, "chat", "users"] = split(trim_prefix(input.resource.path, "/"), "/")
	allow_private_chat_get(input.subject, first, second)
}

matching_routes contains route if {
	"SUB" == input.operation.method
	["private-chats", first, second, "chat", "users"] = split(trim_prefix(input.resource.path, "/"), "/")
	route := "SUB /private-chats/:first/:second/chat/users"
}

allow if {
	"SUB" == input.operation.method
	["private-chats", first, second, "chat", "users"] = split(trim_prefix(input.resource.path, "/"), "/")
	allow_private_chat_get(input.subject, first, second)
}

matching_routes contains route if {
	"UNSUB" == input.operation.method
	["private-chats", first, second, "chat", "users"] = split(trim_prefix(input.resource.path, "/"), "/")
	route := "UNSUB /private-chats/:first/:second/chat/users"
}

allow if {
	"UNSUB" == input.operation.method
	["private-chats", first, second, "chat", "users"] = split(trim_prefix(input.resource.path, "/"), "/")
}

matching_routes contains route if {
	"SUB" == input.operation.method
	["private-chats", first, second, "chat", "users", "list"] = split(trim_prefix(input.resource.path, "/"), "/")
	route := "SUB /private-chats/:first/:second/chat/users/list"
}

allow if {
	"SUB" == input.operation.method
	["private-chats", first, second, "chat", "users", "list"] = split(trim_prefix(input.resource.path, "/"), "/")
	allow_private_chat_get(input.subject, first, second)
}

matching_routes contains route if {
	"MSG" == input.operation.method
	["private-chats", first, second, "chat", "users", "list"] = split(trim_prefix(input.resource.path, "/"), "/")
	route := "MSG /private-chats/:first/:second/chat/users/list"
}

allow if {
	"MSG" == input.operation.method
	["private-chats", first, second, "chat", "users", "list"] = split(trim_prefix(input.resource.path, "/"), "/")
	allow_private_chat_get(input.subject, first, second)
}

matching_routes contains route if {
	"GET" == input.operation.method
	["private-chats", first, second, "chat", "messages"] = split(trim_prefix(input.resource.path, "/"), "/")
	route := "GET /private-chats/:first/:second/chat/messages"
}

allow if {
	"GET" == input.operation.method
	["private-chats", first, second, "chat", "messages"] = split(trim_prefix(input.resource.path, "/"), "/")
	allow_private_chat_get(input.subject, first, second)
}

matching_routes contains route if {
	"SUB" == input.operation.method
	["private-chats", first, second, "chat", "messages"] = split(trim_prefix(input.resource.path, "/"), "/")
	route := "SUB /private-chats/:first/:second/chat/messages"
}

allow if {
	"SUB" == input.operation.method
	["private-chats", first, second, "chat", "messages"] = split(trim_prefix(input.resource.path, "/"), "/")
	allow_private_chat_get(input.subject, first, second)
}

matching_routes contains route if {
	"MSG" == input.operation.method
	["private-chats", first, second, "chat", "messages"] = split(trim_prefix(input.resource.path, "/"), "/")
	route := "MSG /private-chats/:first/:second/chat/messages"
}

allow if {
	"MSG" == input.operation.method
	["private-chats", first, second, "chat", "messages"] = split(trim_prefix(input.resource.path, "/"), "/")
	allow_private_chat_get(input.subject, first, second)
}

matching_routes contains route if {
	"POST" == input.operation.method
	["private-chats", first, second, "chat", "messages"] = split(trim_prefix(input.resource.path, "/"), "/")
	route := "POST /private-chats/:first/:second/chat/messages"
}

allow if {
	"POST" == input.operation.method
	["private-chats", first, second, "chat", "messages"] = split(trim_prefix(input.resource.path, "/"), "/")
	allow_private_chat_post(input.subject, first, second)
}

errors contains error_matching if {
	in_scope
	error_matching := routing.error_matching_routes(matching_routes)
}
